name: Run Gradle on PRs
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: the version to publish
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      - name: Import GPG key
        run: |
          mkdir -p ~/.gradle
          mkdir -p ~/.m2
          echo "${{ secrets.GPG_BASE64 }}" | base64 --decode > /tmp/gpg.key
          echo "${{ secrets.GPG_PASSPHRASE }}" | gpg --batch --import --passphrase-fd 0 /tmp/gpg.key
          echo "signing.keyId=BB19097D" >> ~/.gradle/gradle.properties
          echo "signing.password=${{ secrets.GPG_PASSPHRASE }}" >> ~/.gradle/gradle.properties
          echo "signing.secretKeyRingFile=/tmp/gpg.key" >> ~/.gradle/gradle.properties
          echo "gradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }}" >> ~/.gradle/gradle.properties
          echo "gradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}" >> ~/.gradle/gradle.properties
          sed "s@MAVEN_CENTRAL_PASSWORD@${{ secrets.MAVEN_CENTRAL_PORTAL_PASSWORD }}@" maven-plugin/settings.xml.tmpl | sed "s@MAVEN_CENTRAL_USERNAME@${{ secrets.MAVEN_CENTRAL_PORTAL_USER_NAME }}@" > ~/.m2/settings.xml

      - name: Setup Atlas
        uses: ariga/setup-atlas@master
        with:
          cloud-token: ${{ secrets.ATLAS_TOKEN }}

      - name: Build and test library & plugins
        run: PROVIDER_VERSION=0.0.0-SNAPSHOT make publish-locally

      - uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Release
        if: github.event_name == 'workflow_dispatch'
        run: |
          export PROVIDER_VERSION=${{ inputs.version }}
          cd hibernate-provider
          mvn help:effective-settings
          mvn clean deploy -Pproduction --batch-mode -Drevision=$PROVIDER_VERSION -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}
          cd ../gradle-plugin
          ./gradlew publishPlugins -P production=true
          cd ../maven-plugin
          mvn clean deploy -Pproduction --batch-mode -Dprovider.version=$PROVIDER_VERSION -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }} -s settings.xml

      - name: Cleanup
        if: always()
        run: |
          rm ~/.gradle/gradle.properties
          rm /tmp/gpg.key
